export function matchFilter(filter) {
    if (Array.isArray(filter)) {
        const toPred = matchSingleFilter;
        const predicates = filter.map(toPred);
        return (ctx) => predicates.some(pred => pred(ctx));
    }
    else {
        const pred = matchSingleFilter(filter);
        return (ctx) => pred(ctx);
    }
}
function matchSingleFilter(filter) {
    const [l1, l2, l3] = filter.split(':');
    if (l1 === undefined)
        throw new Error('Empty filter query given');
    if (!((l2 !== undefined && l1 === '') || l1 in UPDATE_KEYS)) {
        const permitted = Object.keys(UPDATE_KEYS);
        throw new Error(`Invalid L1 filter '${l1}' given in '${filter}'. Permitted values are: ${permitted
            .map(k => `'${k}'`)
            .join(', ')}`);
    }
    const l1Obj = l1 === ''
        ? ctx => {
            const elem = L1_DEFAULTS.find(p => p in ctx.update);
            if (elem === undefined)
                return undefined;
            return ctx.update[elem];
        }
        : ctx => ctx.update[l1];
    if (l2 === undefined)
        return (ctx) => l1Obj(ctx) !== undefined;
    const l1ValidationObjs = l1 === ''
        ? L1_DEFAULTS.reduce((agg, p) => ({ ...agg, ...UPDATE_KEYS[p] }), {})
        : UPDATE_KEYS[l1];
    if (!((l3 !== undefined && l2 === '') || l2 in l1ValidationObjs)) {
        const permitted = Object.keys(l1ValidationObjs);
        throw new Error(`Invalid L2 filter '${l2}' given in '${filter}'. Permitted values are: ${permitted
            .map(k => `'${k}'`)
            .join(', ')}`);
    }
    const l2Obj = l2 === ''
        ? ctx => {
            const l1o = l1Obj(ctx);
            if (l1o === undefined)
                return undefined;
            const elem = L2_DEFAULTS.find(p => p in l1o);
            if (elem === undefined)
                return undefined;
            return l1o[elem];
        }
        : ctx => {
            const l1o = l1Obj(ctx);
            return l1o === undefined ? undefined : l1o[l2];
        };
    if (l3 === undefined)
        return (ctx) => l2Obj(ctx) !== undefined;
    const l2ValidationObjs = l2 === ''
        ? L2_DEFAULTS.reduce((agg, p) => ({ ...agg, ...l1ValidationObjs[p] }), {})
        : l1ValidationObjs[l2];
    if (!(l3 in l2ValidationObjs)) {
        const permitted = Object.keys(l2ValidationObjs);
        if (permitted.length === 0)
            throw new Error(`Invalid L3 filter '${l3}' given in '${filter}'. No further filtering is possible after '${l1}:${l2}'.`);
        else
            throw new Error(`Invalid L3 filter '${l3}' given in '${filter}'. Permitted values are: ${permitted
                .map(k => `'${k}'`)
                .join(', ')}`);
    }
    return l3 === 'me'
        ? (ctx) => {
            const me = ctx.me.id;
            return testMaybeArray(l2Obj(ctx), u => u.id === me);
        }
        : (ctx) => testMaybeArray(l2Obj(ctx), e => e[l3] || e.type === l3);
}
function testMaybeArray(t, pred) {
    const p = (x) => !!x && pred(x);
    return Array.isArray(t) ? t.some(p) : p(t);
}
const ENTITY_KEYS = {
    mention: {},
    hashtag: {},
    cashtag: {},
    bot_command: {},
    url: {},
    email: {},
    phone_number: {},
    bold: {},
    italic: {},
    underline: {},
    strikethrough: {},
    code: {},
};
const USER_KEYS = {
    me: {},
    is_bot: {},
};
const MESSAGE_KEYS = {
    text: {},
    audio: {},
    document: {},
    animation: {},
    photo: {},
    sticker: {},
    video: {},
    video_note: {},
    voice: {},
    contact: {},
    dice: {},
    game: {},
    poll: {},
    location: {},
    venue: {},
    new_chat_members: USER_KEYS,
    left_chat_member: USER_KEYS,
    new_chat_title: {},
    new_chat_photo: {},
    delete_chat_photo: {},
    group_chat_created: {},
    supergroup_chat_created: {},
    channel_chat_created: {},
    migrate_to_chat_id: {},
    migrate_from_chat_id: {},
    pinned_message: {},
    invoice: {},
    successful_payment: {},
    connected_website: {},
    passport_data: {},
    proximity_alert_triggered: {},
    entities: ENTITY_KEYS,
    caption_entities: ENTITY_KEYS,
    forward_date: {},
    caption: {},
};
const CALLBACK_QUERY_KEYS = { data: {}, game_short_name: {} };
const CHAT_MEMBER_UPDATED_KEYS = {
    chat: {},
    from: USER_KEYS,
    old_chat_member: {},
    new_chat_member: {},
};
const UPDATE_KEYS = {
    message: MESSAGE_KEYS,
    edited_message: MESSAGE_KEYS,
    channel_post: MESSAGE_KEYS,
    edited_channel_post: MESSAGE_KEYS,
    inline_query: {},
    chosen_inline_result: {},
    callback_query: CALLBACK_QUERY_KEYS,
    shipping_query: {},
    pre_checkout_query: {},
    poll: {},
    poll_answer: {},
    my_chat_member: CHAT_MEMBER_UPDATED_KEYS,
    chat_member: CHAT_MEMBER_UPDATED_KEYS,
};
const L1_DEFAULTS = ['message', 'channel_post'];
const L2_DEFAULTS = ['entities', 'caption_entities'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThCQSxNQUFNLFVBQVUsV0FBVyxDQUN2QixNQUFlO0lBRWYsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBR3ZCLE1BQU0sTUFBTSxHQUFpQyxpQkFBaUIsQ0FBQTtRQUM5RCxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3JDLE9BQU8sQ0FBQyxHQUFNLEVBQXVCLEVBQUUsQ0FDbkMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0tBQ3pDO1NBQU07UUFDSCxNQUFNLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUN0QyxPQUFPLENBQUMsR0FBTSxFQUF1QixFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0tBQ3BEO0FBQ0wsQ0FBQztBQUVELFNBQVMsaUJBQWlCLENBQ3RCLE1BQVM7SUFFVCxNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBR3RDLElBQUksRUFBRSxLQUFLLFNBQVM7UUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUE7SUFDakUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssU0FBUyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksV0FBVyxDQUFDLEVBQUU7UUFDekQsTUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUMxQyxNQUFNLElBQUksS0FBSyxDQUNYLHNCQUFzQixFQUFFLGVBQWUsTUFBTSw0QkFBNEIsU0FBUzth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